
// TODO: improve the addition pseudocode below and prove the correctness of the algorithm using variable state table. 
module ADD(numberA, numberB)
start
	// part of step 1, 2
	declare
		num carry=0
		num i=m
	// step3
	while (m>=i && i>0)	// TODO: this can be further simplified to avoid compound Boolean expression
		// step 4, rewrite ci as c[i]
		numberC[i]=numberA[i-1]+numberA[i-1]+carry
		// step 5
		if numberC[i]>=10 then
			numberC[i]=numberC[i]-10
			carry=1
		else
			carry=0
		endif
		// step 6
		i=i-1
	endwhile
	// step 7
	numberC[0]=carry
	print(numberC)
	return numberC
end

Variable State Table for ADD module

given m=2
Pseudocode Array     	vs 	Algorithm
A=13, A[0]=1, A[1]=3 	vs 	a0=3, a1=1
B=29, B[0]=2, B[1]=9 	vs 	b0=9, b1=2
C[0],C[1],C[2]

m	carry	i	m>=i && i>0	C[i]=A[i-1]+B[i-1]+carry	C[i]>=10	C[i]=C[i]-10
2	0	2	2>=2 && 2>0
			, true		C[2]=A[1]+B[1]+carry		C[2]>=10	C[2]=C[2]-10
			 		C[2]=3+9+0=12			12>=10, True	C[2]=12-10=2
2	1	1	2>=1 && 1>0
			, true		C[1]=A[0]+B[0]+carry
					C[2]=1+2+1=4			4>-10, False
2	0	0	2>=0 && 0>0
			false

print C[0], C[1], C[2], 0, 4, 2
